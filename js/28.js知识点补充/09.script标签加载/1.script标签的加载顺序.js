https://segmentfault.com/a/1190000037724479

背景：

1. 传统的浏览器解析是代码一行一行的进行解析, 解析HTML时如果遇到script标签
就会停止解析HTML, 对script资源进行下载, 并且下载完了就会立即执行。
由于这样的特性, 可能会造成 DOM 树在还没有完全解析时就开始执行 JavaScript,
    需要操作 DOM 的程序可能因此无法正确执行, 从而造成许多问题；或是由于 < script > 中的资源下载、执行时间过程,
        用户会卡在白画面, 并会产生觉得网站太慢不好用之类的体验。


// defer 属性一
defer 在加上 defer 属性后，浏览器会继续解析、渲染画面，而不会因为需要载入 < script >
    内的资源而卡住；实际执行时，会在 DOMContentLoaded 执行之前，由上到下的依照摆放顺序触发。

// async 属性二
async: 在 < script > 标签中加上 async 属性后，与defer 的相同点是也会在后台执行下载，但不同的是当下载完成会马上暂停 DOM 解析（如果还没有解析完成的话），
并开始执行 JavaScript。因为下载完成后会立即执行，加上 async 属性后，就无法保证执行顺序了。